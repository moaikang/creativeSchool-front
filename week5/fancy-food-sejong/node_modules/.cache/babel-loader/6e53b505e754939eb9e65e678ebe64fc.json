{"ast":null,"code":"var _jsxFileName = \"/Users/moai/Desktop/broom/week5/fancy-food-sejong/src/components/KakaoMap.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { fancyRestaurants } from \"../restaurantInfo/restaurantInfo\";\nconst {\n  kakao,\n  innerHeight\n} = window;\nconst mapStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nfunction KakaoMap({\n  id\n}) {\n  const mapContainer = useRef();\n  useEffect(() => {\n    kakao.maps.load(() => {\n      let el = mapContainer.current;\n      let map = new kakao.maps.Map(el, {\n        center: new kakao.maps.LatLng(fancyRestaurants[id].lat, fancyRestaurants[id].lng)\n      });\n      let markerPosition = new kakao.maps.LatLng(fancyRestaurants[id].lat, fancyRestaurants[id].lng);\n      let markers = []; // 마커를 생성합니다\n\n      markers.push(new kakao.maps.Marker({\n        position: markerPosition\n      })); // 마커가 지도 위에 표시되도록 설정합니다\n\n      markers.map(marker => marker.setMap(map));\n      let iwContent = `<div style=\" padding:8px; width:160px; display:flex\">\n      <div>\n      <div style=\"font-weight:bold\">\n        ${fancyRestaurants[id].name} \n      </div>\n      <div>\n        ${fancyRestaurants[id].category}\n      </div>\n      <div>\n        추천메뉴: ${fancyRestaurants[id].recommend}\n      </div>\n      </div>\n      </div>`,\n          // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n      iwPosition = new kakao.maps.LatLng(fancyRestaurants[id].lat, fancyRestaurants[id].lng); //인포윈도우 표시 위치입니다\n      // 인포윈도우를 생성합니다\n\n      let infowindow = new kakao.maps.InfoWindow({\n        position: iwPosition,\n        content: iwContent\n      });\n      infowindow.open(map);\n    });\n    return () => {\n      mapContainer.current.style.display = \"none\";\n    };\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: innerHeight / 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    style: mapStyle,\n    ref: mapContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default KakaoMap;","map":{"version":3,"sources":["/Users/moai/Desktop/broom/week5/fancy-food-sejong/src/components/KakaoMap.js"],"names":["React","useEffect","useRef","fancyRestaurants","kakao","innerHeight","window","mapStyle","width","height","KakaoMap","id","mapContainer","maps","load","el","current","map","Map","center","LatLng","lat","lng","markerPosition","markers","push","Marker","position","marker","setMap","iwContent","name","category","recommend","iwPosition","infowindow","InfoWindow","content","open","style","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAyBC,MAA/B;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,MAAM,EAAE;AAFO,CAAjB;;AAKA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA0B;AACxB,QAAMC,YAAY,GAAGV,MAAM,EAA3B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACS,IAAN,CAAWC,IAAX,CAAgB,MAAM;AACpB,UAAIC,EAAE,GAAGH,YAAY,CAACI,OAAtB;AACA,UAAIC,GAAG,GAAG,IAAIb,KAAK,CAACS,IAAN,CAAWK,GAAf,CAAmBH,EAAnB,EAAuB;AAC/BI,QAAAA,MAAM,EAAE,IAAIf,KAAK,CAACS,IAAN,CAAWO,MAAf,CACNjB,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBU,GADf,EAENlB,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBW,GAFf;AADuB,OAAvB,CAAV;AAOA,UAAIC,cAAc,GAAG,IAAInB,KAAK,CAACS,IAAN,CAAWO,MAAf,CACnBjB,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBU,GADF,EAEnBlB,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBW,GAFF,CAArB;AAKA,UAAIE,OAAO,GAAG,EAAd,CAdoB,CAgBpB;;AACAA,MAAAA,OAAO,CAACC,IAAR,CAAa,IAAIrB,KAAK,CAACS,IAAN,CAAWa,MAAf,CAAsB;AAAEC,QAAAA,QAAQ,EAAEJ;AAAZ,OAAtB,CAAb,EAjBoB,CAmBpB;;AACAC,MAAAA,OAAO,CAACP,GAAR,CAAaW,MAAD,IAAYA,MAAM,CAACC,MAAP,CAAcZ,GAAd,CAAxB;AAEA,UAAIa,SAAS,GAAI;;;UAGb3B,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBoB,IAAK;;;UAG1B5B,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBqB,QAAS;;;gBAGxB7B,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBsB,SAAU;;;aATzC;AAAA,UAYS;AACPC,MAAAA,UAAU,GAAG,IAAI9B,KAAK,CAACS,IAAN,CAAWO,MAAf,CACXjB,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBU,GADV,EAEXlB,gBAAgB,CAACQ,EAAD,CAAhB,CAAqBW,GAFV,CAbf,CAtBoB,CAsCf;AAEL;;AACA,UAAIa,UAAU,GAAG,IAAI/B,KAAK,CAACS,IAAN,CAAWuB,UAAf,CAA0B;AACzCT,QAAAA,QAAQ,EAAEO,UAD+B;AAEzCG,QAAAA,OAAO,EAAEP;AAFgC,OAA1B,CAAjB;AAKAK,MAAAA,UAAU,CAACG,IAAX,CAAgBrB,GAAhB;AACD,KA/CD;AAiDA,WAAO,MAAM;AACXL,MAAAA,YAAY,CAACI,OAAb,CAAqBuB,KAArB,CAA2BC,OAA3B,GAAqC,MAArC;AACD,KAFD;AAGD,GArDQ,EAqDN,CAAC7B,EAAD,CArDM,CAAT;AAuDA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAEJ,WAAW,GAAG;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAEE,QAArB;AAA+B,IAAA,GAAG,EAAEK,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AACD,eAAeF,QAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { fancyRestaurants } from \"../restaurantInfo/restaurantInfo\";\n\nconst { kakao, innerHeight } = window;\n\nconst mapStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nfunction KakaoMap({ id }) {\n  const mapContainer = useRef();\n  useEffect(() => {\n    kakao.maps.load(() => {\n      let el = mapContainer.current;\n      let map = new kakao.maps.Map(el, {\n        center: new kakao.maps.LatLng(\n          fancyRestaurants[id].lat,\n          fancyRestaurants[id].lng\n        ),\n      });\n\n      let markerPosition = new kakao.maps.LatLng(\n        fancyRestaurants[id].lat,\n        fancyRestaurants[id].lng\n      );\n\n      let markers = [];\n\n      // 마커를 생성합니다\n      markers.push(new kakao.maps.Marker({ position: markerPosition }));\n\n      // 마커가 지도 위에 표시되도록 설정합니다\n      markers.map((marker) => marker.setMap(map));\n\n      let iwContent = `<div style=\" padding:8px; width:160px; display:flex\">\n      <div>\n      <div style=\"font-weight:bold\">\n        ${fancyRestaurants[id].name} \n      </div>\n      <div>\n        ${fancyRestaurants[id].category}\n      </div>\n      <div>\n        추천메뉴: ${fancyRestaurants[id].recommend}\n      </div>\n      </div>\n      </div>`, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwPosition = new kakao.maps.LatLng(\n          fancyRestaurants[id].lat,\n          fancyRestaurants[id].lng\n        ); //인포윈도우 표시 위치입니다\n\n      // 인포윈도우를 생성합니다\n      let infowindow = new kakao.maps.InfoWindow({\n        position: iwPosition,\n        content: iwContent,\n      });\n\n      infowindow.open(map);\n    });\n\n    return () => {\n      mapContainer.current.style.display = \"none\";\n    };\n  }, [id]);\n\n  return (\n    <div style={{ height: innerHeight / 3 }}>\n      <div id=\"map\" style={mapStyle} ref={mapContainer}></div>\n    </div>\n  );\n}\nexport default KakaoMap;\n"]},"metadata":{},"sourceType":"module"}